<Page
    x:Class="MagonoteToolkit.Views.FileChangeMonitorPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:bh="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:resources="clr-namespace:MagonoteToolkit.Resources"
    xmlns:viewmodels="clr-namespace:MagonoteToolkit.ViewModels"
    mc:Ignorable="d">

    <Page.DataContext>
        <viewmodels:FileChangeMonitorPageViewModel />
    </Page.DataContext>

    <Grid Margin="10,10,10,10" HorizontalAlignment="Center">
        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <StackPanel>
                <TextBlock Style="{StaticResource SubtitleTextBlockStyle}" Text="{x:Static resources:Strings.Workspace}" />
                <ComboBox
                    Width="500"
                    Margin="10,5,10,5"
                    ItemsSource="{Binding WorkspaceList}"
                    SelectedItem="{Binding Workspace}">
                    <bh:Interaction.Triggers>
                        <bh:EventTrigger EventName="SelectionChanged">
                            <bh:InvokeCommandAction Command="{Binding WorkspaceChangeCommand}" />
                        </bh:EventTrigger>
                    </bh:Interaction.Triggers>
                </ComboBox>
                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                    <Button
                        Margin="10,5,10,5"
                        HorizontalAlignment="Stretch"
                        Command="{Binding AddWorkspaceCommand}"
                        Content="{x:Static resources:Strings.Add}"
                        IsEnabled="{Binding IsOperationEnable}" />
                    <Button
                        Margin="10,5,10,5"
                        HorizontalAlignment="Stretch"
                        Command="{Binding DelWorkspaceCommand}"
                        Content="{x:Static resources:Strings.Delete}"
                        IsEnabled="{Binding IsOperationEnable}" />
                </StackPanel>

                <TextBlock Style="{StaticResource SubtitleTextBlockStyle}" Text="{x:Static resources:Strings.AddFileChangeMonitorTarget}" />
                <Grid>
                    <ListBox
                        Height="50"
                        Margin="10,5,10,5"
                        AllowDrop="True"
                        ScrollViewer.HorizontalScrollBarVisibility="Auto"
                        ScrollViewer.VerticalScrollBarVisibility="Auto">
                        <bh:Interaction.Triggers>
                            <bh:EventTrigger EventName="PreviewDragOver">
                                <bh:InvokeCommandAction Command="{Binding PreviewDragOverCommand}" PassEventArgsToCommand="True" />
                            </bh:EventTrigger>
                            <bh:EventTrigger EventName="Drop">
                                <bh:InvokeCommandAction Command="{Binding DropCommand}" PassEventArgsToCommand="True" />
                            </bh:EventTrigger>
                        </bh:Interaction.Triggers>
                    </ListBox>
                    <TextBlock
                        Margin="20,20,20,20"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        AllowDrop="True"
                        Text="{x:Static resources:Strings.MessageGuideDragAndDrop}"
                        TextAlignment="Center">
                        <bh:Interaction.Triggers>
                            <bh:EventTrigger EventName="PreviewDragOver">
                                <bh:InvokeCommandAction Command="{Binding PreviewDragOverCommand}" PassEventArgsToCommand="True" />
                            </bh:EventTrigger>
                            <bh:EventTrigger EventName="Drop">
                                <bh:InvokeCommandAction Command="{Binding DropCommand}" PassEventArgsToCommand="True" />
                            </bh:EventTrigger>
                        </bh:Interaction.Triggers>
                    </TextBlock>
                </Grid>
                <StackPanel Orientation="Horizontal">
                    <TextBlock
                        Margin="10,5,5,5"
                        VerticalAlignment="Center"
                        Text="{x:Static resources:Strings.Memo}" />
                    <TextBox
                        Width="450"
                        Margin="5,5,10,5"
                        Text="{Binding AddMemo, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>

                <TextBlock Style="{StaticResource SubtitleTextBlockStyle}" Text="{x:Static resources:Strings.FileChangeMonitorResult}" />
                <DataGrid
                    Width="700"
                    Height="300"
                    Margin="10,5,10,5"
                    AutoGenerateColumns="False"
                    CanUserAddRows="False"
                    HeadersVisibility="Column"
                    ItemsSource="{Binding Path=MonitorResult}">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Width="30">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding Path=IsSelected, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn
                            Binding="{Binding Path=CheckResult}"
                            Header="{x:Static resources:Strings.CheckResult}"
                            IsReadOnly="True" />
                        <DataGridTextColumn
                            Binding="{Binding Path=File}"
                            Header="{x:Static resources:Strings.File}"
                            IsReadOnly="True" />
                        <DataGridTextColumn
                            Binding="{Binding Path=CheckedTimestamp}"
                            Header="{x:Static resources:Strings.CheckedTimestamp}"
                            IsReadOnly="True" />
                        <DataGridTextColumn
                            Binding="{Binding Path=CurrentTimestamp}"
                            Header="{x:Static resources:Strings.CurrentTimestamp}"
                            IsReadOnly="True" />
                        <DataGridTextColumn
                            Binding="{Binding Path=Memo}"
                            Header="{x:Static resources:Strings.Memo}"
                            IsReadOnly="True" />
                    </DataGrid.Columns>
                </DataGrid>

                <Button
                    Margin="10,5,10,5"
                    HorizontalAlignment="Stretch"
                    Command="{Binding DeleteAllCommand}"
                    Content="{x:Static resources:Strings.DeleteAll}"
                    IsEnabled="{Binding IsOperationEnable}" />
                <Button
                    Margin="10,5,10,5"
                    HorizontalAlignment="Stretch"
                    Command="{Binding DeleteSelectedItemCommand}"
                    Content="{x:Static resources:Strings.DeleteSelectedItem}"
                    IsEnabled="{Binding IsOperationEnable}" />
                <Button
                    Margin="10,5,10,5"
                    HorizontalAlignment="Stretch"
                    Command="{Binding UpdateTimestampAllCommand}"
                    Content="{x:Static resources:Strings.UpdateTimestampAll}"
                    IsEnabled="{Binding IsOperationEnable}" />
                <Button
                    Margin="10,5,10,5"
                    HorizontalAlignment="Stretch"
                    Command="{Binding UpdateTimestampSelectedItemCommand}"
                    Content="{x:Static resources:Strings.UpdateTimestampSelectedItem}"
                    IsEnabled="{Binding IsOperationEnable}" />
                <Button
                    Margin="10,5,10,5"
                    HorizontalAlignment="Stretch"
                    Command="{Binding RecheckCommand}"
                    Content="{x:Static resources:Strings.Recheck}"
                    IsEnabled="{Binding IsOperationEnable}" />

                <Grid Margin="10,5,10,5">
                    <ProgressBar VerticalAlignment="Stretch" IsIndeterminate="{Binding ProgressIsIndeterminate}" />
                    <TextBlock
                        Margin="0,5,0,5"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Text="{Binding ProgressMessage}" />
                </Grid>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</Page>
